# PS Ticket Process Bot - Production Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO

# =============================================================================
# JIRA CONFIGURATION
# =============================================================================
# Your JIRA instance URL (without trailing slash)
JIRA_BASE_URL=https://your-company.atlassian.net

# JIRA service account credentials
JIRA_USERNAME=your-service-account@company.com
JIRA_API_TOKEN=your-jira-api-token-here

# JIRA project configuration
JIRA_PROJECT_KEY=PS
JIRA_DEFAULT_ASSIGNEE=your-default-assignee

# =============================================================================
# GOOGLE GEMINI AI CONFIGURATION
# =============================================================================
# Google Gemini API key
GEMINI_API_KEY=your-gemini-api-key-here

# Gemini model configuration
GEMINI_MODEL=gemini-pro
GEMINI_TEMPERATURE=0.3
GEMINI_MAX_TOKENS=1024

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database URL
DATABASE_URL=postgresql://psticket:psticket123@postgres:5432/ps_ticket_bot

# Database pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis URL for Celery and caching
REDIS_URL=redis://redis:6379/0

# Redis connection settings
REDIS_MAX_CONNECTIONS=50
REDIS_TIMEOUT=30

# =============================================================================
# CELERY CONFIGURATION
# =============================================================================
# Celery broker and result backend
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Celery worker settings
CELERY_WORKER_CONCURRENCY=4
CELERY_TASK_TIMEOUT=300
CELERY_MAX_RETRIES=3

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Secret key for JWT tokens and encryption
SECRET_KEY=your-super-secret-key-change-this-in-production

# Allowed hosts (comma-separated)
ALLOWED_HOSTS=ps-ticket-bot.yourdomain.com,localhost,127.0.0.1

# CORS origins (comma-separated)
CORS_ORIGINS=https://yourdomain.com,https://your-company.atlassian.net

# API rate limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================
# Sentry DSN for error tracking (optional)
SENTRY_DSN=your-sentry-dsn-here

# Log configuration
LOG_FORMAT=json
LOG_FILE=/app/logs/ps-ticket-bot.log
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5

# Metrics and monitoring
ENABLE_METRICS=true
METRICS_PORT=9000
HEALTH_CHECK_TIMEOUT=30

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Server configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4
TIMEOUT=30

# Feature flags
ENABLE_AI_COMMENTS=true
ENABLE_STATUS_AUTOMATION=true
ENABLE_DUPLICATE_DETECTION=true
ENABLE_QUALITY_ASSESSMENT=true

# Processing configuration
MAX_CONCURRENT_TICKETS=10
TICKET_PROCESSING_TIMEOUT=300
COMMENT_MAX_LENGTH=2000

# =============================================================================
# SCHEDULED TASKS CONFIGURATION
# =============================================================================
# Ticket processing schedule (cron format)
TICKET_FETCH_SCHEDULE=*/15 * * * *  # Every 15 minutes
QUALITY_ASSESSMENT_SCHEDULE=*/30 * * * *  # Every 30 minutes
CLEANUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# Batch processing settings
BATCH_SIZE=50
PROCESSING_DELAY=5

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================
# Slack notifications (optional)
SLACK_WEBHOOK_URL=your-slack-webhook-url
SLACK_CHANNEL=#ps-ticket-bot
ENABLE_SLACK_NOTIFICATIONS=false

# Email notifications (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@company.com
SMTP_PASSWORD=your-email-password
ENABLE_EMAIL_NOTIFICATIONS=false

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================
# Backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 3 * * *  # Daily at 3 AM
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=/app/backups

# Maintenance windows
MAINTENANCE_WINDOW_START=02:00
MAINTENANCE_WINDOW_END=04:00
MAINTENANCE_TIMEZONE=UTC

# =============================================================================
# DEVELOPMENT AND TESTING (Production should be false)
# =============================================================================
# Development settings
ENABLE_DEBUG_ENDPOINTS=false
ENABLE_TEST_MODE=false
MOCK_EXTERNAL_APIS=false

# Testing configuration
TEST_JIRA_TICKET=PS-1762
TEST_USER_EMAIL=test@company.com

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Connection timeouts
HTTP_TIMEOUT=30
JIRA_API_TIMEOUT=60
GEMINI_API_TIMEOUT=45

# Cache settings
CACHE_TTL=3600  # 1 hour
CACHE_MAX_SIZE=1000

# Request limits
MAX_REQUEST_SIZE=10MB
MAX_UPLOAD_SIZE=50MB

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
# SSL settings (if using HTTPS)
SSL_CERT_PATH=/etc/ssl/certs/ps-ticket-bot.crt
SSL_KEY_PATH=/etc/ssl/private/ps-ticket-bot.key
FORCE_HTTPS=true

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker-specific settings
DOCKER_NETWORK=ps-ticket-network
CONTAINER_TIMEZONE=UTC

# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# NOTES
# =============================================================================
# 1. Replace all placeholder values with your actual configuration
# 2. Keep this file secure and never commit it to version control
# 3. Use strong, unique passwords and API keys
# 4. Regularly rotate API keys and secrets
# 5. Monitor logs for any configuration issues
# 6. Test all integrations before going live
